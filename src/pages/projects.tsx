import Head from 'next/head'
import React, { useRef, useState, Suspense } from 'react'
import { Box, ContentBox } from "../styles/Styles"
import { GLTFLoader, GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import { Canvas, useFrame, useLoader } from '@react-three/fiber'
import { Html, Environment, useGLTF, ContactShadows, OrbitControls, Image } from '@react-three/drei'
import * as THREE from 'three'
import Netflix from './netflix'
import styled from 'styled-components'

const ContainerNetflix = styled.div`
    transform:scale(0.3) !important;    
    max-width:max-content;
    max-height:max-content;
    z-index: 11;
    `
const HTMLContainer = styled(Html)`
z-index: 11 !important;
`
function Model(props) {
    const group = useRef<THREE.Group>(null)
    // Load model
    // const { nodes, materials } = useGLTF('./mac-draco.glb')
    const { nodes, materials } = useGLTF('./mac-draco.glb') as any
    // Make it float
    useFrame((state) => {
        const t = state.clock.getElapsedTime()
        group.current.rotation.x = THREE.MathUtils.lerp(group.current.rotation.x, Math.cos(t / 2) / 20 + 0.25, 0.1)
        group.current.rotation.y = THREE.MathUtils.lerp(group.current.rotation.y, Math.sin(t / 4) / 20, 0.1)
        group.current.rotation.z = THREE.MathUtils.lerp(group.current.rotation.z, Math.sin(t / 8) / 20, 0.1)
        group.current.position.y = THREE.MathUtils.lerp(group.current.position.y, (-2 + Math.sin(t / 2)) / 2, 0.1)
    })
    // The jsx graph was auto-generated by: https://github.com/pmndrs/gltfjsx
    return (
        <group ref={group} {...props} dispose={null}>
            <group rotation-x={-0.125} position={[0, -0.04, 0.41]}>
                <group position={[0, 2.96, -0.13]} rotation={[Math.PI / 2, 0, 0]}>
                    <mesh material={materials.aluminium} geometry={nodes['Cube008'].geometry} />
                    <mesh material={materials['matte.001']} geometry={nodes['Cube008_1'].geometry} />
                    <mesh geometry={nodes['Cube008_2'].geometry}>
                        {/* Drei's HTML component can "hide behind" canvas geometry */}
                        <HTMLContainer rotation-x={-Math.PI / 2} position={[0, 0.05, -0.09]} transform occlude>
                            <ContainerNetflix onPointerDown={(e) => e.stopPropagation()}>
                                <Netflix />
                            </ContainerNetflix>
                        </HTMLContainer>
                    </mesh>
                </group>
            </group>
            <mesh material={materials.keys} geometry={nodes.keyboard.geometry} position={[1.79, 0, 3.45]} />
            <group position={[0, -0.1, 3.39]}>
                <mesh material={materials.aluminium} geometry={nodes['Cube002'].geometry} />
                <mesh material={materials.trackpad} geometry={nodes['Cube002_1'].geometry} />
            </group>
            <mesh material={materials.touchbar} geometry={nodes.touchbar.geometry} position={[0, -0.03, 1.2]} />
        </group>
    )
}

export default function Projects() {
    return (
        <Canvas camera={{ position: [-5, 0, -15], fov: 55 }}>
            <pointLight position={[10, 10, 10]} intensity={1.5} />
            <Suspense fallback={null}>
                <group rotation={[0, Math.PI, 0]} position={[0, 1, 0]}>
                    <Model />
                </group> 
            </Suspense>
            <ContactShadows position={[0, -4.5, 0]} scale={20} blur={2} far={4.5} />
            <OrbitControls enablePan={false} enableZoom={false} minPolarAngle={Math.PI / 2.2} maxPolarAngle={Math.PI / 2.2} />
        </Canvas>
    )
}

// export  function Projects() {

//     return (
//         <>
//             <Head>
//                 <title>Create Next App</title>
//                 <meta name="description" content="Generated by create next app" />
//                 <meta name="viewport" content="width=device-width, initial-scale=1" />
//                 <link rel="icon" href="/favicon.ico" />
//             </Head>
//             <main> 

//                  <App />
 
//             </main>
//         </>
//     )
// }